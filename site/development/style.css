/* Reference sizes:

- 360×780 (iPhone 13 Mini)
- 1,180×820 (iPad)
*/

/*
  TODO: do not use `@import` for real-world/prod CSS. It is slow, becuase it has
  to do multiple jumps to the server.
*/
@import './fonts/fonts.css';

:root {
   --base-size: 15px;
   --grid-base: 16px;

   --serif: 'Frame';
   --serif-secondary: 'Sanomat';
   --sans: 'Sanomat Sans Text';
   --sans-adjust: 1; /* TODO */
   --mono: 'Berkeley Mono';
   --mono-adjust: 1; /* TODO */

   --text: var(--serif); /* TODO: make a stack!*/
   --text-lh: 1.4;
   --text-weight: 400;
   --text-weight-bold: 600;

   --text-alt: var(--sans); /* TODO: make a stack!*/
   --text-alt-adjust: var(--sans-adjust);
   --text-alt-lh: 1.375;
   --text-alt-weight: 350;
   --text-alt-weight-bold: 500;

   --header: var(--serif-secondary); /* TODO: make a stack!*/

   --dark-blue: oklch(37.75% 0.042 246.48);
   --light-blue: oklch(81.95% 0.042 241.48);
   --gold: oklch(82.16% 0.148 73.12);
   --tan: oklch(68.99% 0.073 67.54);
   --brown: oklch(35.71% 0.033 55.12);

   --smcp-spacing: 0.05;

   --lw: 38rem;
}

/* Rough guess */
@media screen and (min-width: 600px) {
   :root {
      --base-size: 16px;
      --grid-base: 18px;
   }

   html {
      padding: 14px;
   }
}

/* Rough guess, more later! */
@media screen and (min-width: 1024px) {
   :root {
      --text-lh: 1.5;
      --text-alt-lh: 1.475;
      --grid-base: 20px;
   }

   html: {
      padding: 16px;
   }
}

html {
   font-family: var(--text);
   font-size: var(--base-size);
   line-height: 1;
   background-color: var(--light-blue);
   color: var(--dark-blue);
   padding: 12px;
   /* font-size-adjust: from-font; */
   hanging-punctuation: first allow-end last;
}

.content {
   --width: 38em;

   line-height: var(--text-lh);
}

body {
   margin: 0;
}

nav {
   font-family: var(--text-alt);
   font-weight: var(--text-alt-weight);

   ul {
      list-style: none;
      margin-inline: 0;
   }
}

nav.main-nav {
   ul li a::before {
      content: '/';
      margin-right: 0.1em;
      display: inline-block;
   }
}

main {
}

img {
   max-width: 100%;
}

.avatar {
}

article {
   line-height: var(--text-lh);
   font-weight: var(--text-weight);
   max-width: var(--lw);
   margin-left: auto;
   margin-right: auto;
   orphans: 3;
   hyphens: none;
}

[data-paragraph-flow='spacing'] {
   --p-text-indent: 0;
   --p-margin: 0 0 1em;
}

[data-paragraph-flow='indented'] {
   --p-text-indent: 1.65em;
   --p-margin: 0;
}

article p {
   text-indent: var(--p-text-indent, 1.65em);
   margin: var(--p-margin);
}

article p:first-child,
article :not(p) + p {
   text-indent: 0;
}

article p:last-child {
   margin-bottom: 0;
}

article .item-subtitle {
   font-size: 0.92em;
   font-style: italic;
}

article blockquote,
article .note,
article aside,
article .qualifiers {
   font-family: var(--text-alt);
   line-height: var(--text-alt-lh);
   font-weight: var(--text-alt-weight);
}

article .note,
article aside,
article .qualifiers {
   margin: 1em -1em;
   padding: 1em;
   background: #e8e8e8;
}

article a {
   color: inherit;
   transition: background 0.6s;
   text-decoration: none;
   padding: 0.3em 0.12em 0.075em;
   margin-left: -0.06em;
   margin-right: -0.06em;
   border-radius: 2pt;
   line-height: 0;
}

article :is(h1, h2, h3, h4, h5, h6) a {
   text-decoration: none;
   color: inherit;
   transition: none;
   text-decoration: none;
   font-family: var(--header);
   &::after {
      content: '';
   }
}

article a:hover {
   background: var(--dark-blue);
   color: var(--light-blue);
}

/*
  When I actually do this, do it by pre-processing the links! The CSS to do it
  may technically be *possible*, but… so many hoops to jump through. Whereas if
  I just preprocess the links, it is trivial. I can simply select on:

  - `.fnref`
  - `.xref`
  - `.xref .v3
  - `.xref .v4`
  - `.xref .v5`

  Then normal links can just be, well, normal links!
 */
article a[href]::after {
   content: '∞';
   vertical-align: baseline;
   line-height: 0;
   font-size: 0.9em;
   margin: 0 1pt;
   color: hsl(208, 85%, 35%);
}

/* on-site links */
article a[href^='/']:not([id*='fnref'])::after {
   content: '✢';
}

/* on-page links */
article a[href^='#']:not([id*='fnref'])::after {
   content: '\FEFF#';
}

article a[href^='#'][id*='fnref'] {
   &::before {
      content: '[';
   }

   &::after {
      content: ']';
   }
}

article hr {
   visibility: hidden;
   margin: 2em;
}

/* Previous version links */
article a[href^='https://v3.chriskrycho.com']::after
{
   content: 'v3';
   font-size: 0.8em;
   vertical-align: super;
   font-family: var(--header);
   font-style: italic;
   font-weight: 500;
}

article a[href^='https://v4.chriskrycho.com']::after
{
   content: 'v4';
   font-size: 0.8em;
   vertical-align: super;
   font-family: var(--header);
   font-style: italic;
   font-weight: 500;
}

article a[href^='https://v5.chriskrycho.com']::after
{
   content: 'v5';
   font-size: 0.8em;
   vertical-align: super;
   font-family: var(--header);
   font-style: italic;
   font-weight: 500;
}

[data-hidden] {
   display: none;
}

abbr {
   font-variant: all-small-caps;
   letter-spacing: var(--smcp-spacing);
}

code {
   font-family: var(--mono);
   font-size-adjust: var(--mono-adjust);
}

pre code {
   hanging-punctuation: none;
   line-height: 1.2;
}

p code {
   line-height: 1;
   background: #f4f4f4;
   padding: 0.05em 0.2em;
   border-radius: 0.2em;
}

pre {
   background: #f4f4f4;
   margin: 1em -1em;
   padding: 0.4em 1em;
   overflow-x: auto;
}

.smcp {
   font-variant: small-caps;
   letter-spacing: var(--smcp-spacing);
}

h1,
h2,
h3,
h4,
h5,
h6 {
   font-family: var(--header);
   font-weight: var(--h-weight);
}

sup {
   line-height: 0;
   font-size: 0.8em;
}
